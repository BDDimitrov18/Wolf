<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RequestFiltersApplyButton.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAQAAAAEACAYAAABccqhmAAAABGdBTUEAALGPC/xhBQAACgxJREFUeF7t
        3W/I/Xddx/FtbVhj5TRwgZEYdkMTC6QbC4oFtaDylnYjWBGIRigSYaaEf4j+S3+8kXWjItgoUwpb3WiU
        /aFcCuvGyIQQQcQbsxZaQ1mbW73em0e23967fudc5/s95/P9fh8PeDKcN3au8/183ue6Ptf3XOcaAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGA4z01vTnelj6TPp/+TZujf0l+kX04vSZzZO9IXU3ex
        pLl7X3pB4sSelz6auosinbLPpe9OnMjz07+m7mJI5+gLyRA4kQ+m7iJI5+yzqV6cmNGrU/fkSyP0B4kZ
        fSx1T7w0Qo+lFydmcGvqnnRppN6VmMFbUveESyP114kZ/GHqnnBppD6TmMH7U/eESyP1YGIGH0jdEy6N
        1H8mZlD3X3dPuDRSH07M4IdT94RLI/WexAyek+rnq+5Jl0bppYmZvDV1T7o0Qn+ZmNEN6ZOpe/Klc1Z3
        Ab48MbPvSt0FkM7ZrydOpP4CUHcRpHN0b7o+cUJ3p+5iSKfsgXRL4sRuSp9I3UWRTtGjqd6kxpnUr1zq
        r7F0F0eau59KnNlrUndxpDmrW9MZRJ3AdhdJmqOPpxsTg6gT2DqJ7S6WNGUPJZ8JMKA6ia0T2e6iSVP1
        qsSg6kS2Tma7Cycd268lBvem1F086Zj+Ll2XWAB/PERTVn/m6+sTC1EntHVS211M6ZAeSa9MLEyd1NaJ
        bXdRpX17Q2Kh6sS2u6jSPt2ZWLhfSd3FlS7q/lR/hYqFq5PbOsHtLrLUVR/5/aLEStQJbp3kdhdburLb
        EytTJ7l1ottdcGnXLyRW6idTd9Glys0+G1Anu93F17Zzs89G1MlunfB2i0DbzM0+G1MnvHXS2y0Gba/X
        JTamTnofT92C0HZys8+G/XzqFoW2kZt9Nu7adE/qFofWnZt9eMLN6VOpWyRaZ/Wjn5t9+IpXpIdTt1i0
        vt6R4Glem7rFonVVP/LVj37wDG4SWnf1o179yActNwmtt/oRr37Ugwu5SWid3ZFgL24SWle/k+Agb0/d
        YtKyui/dkOAgbhJafg+mFya4FDcJLbfH0m0JjuImoWX21gSTqBPkbpFpzO5OMKn3pm6xaaw+kW5KMKk6
        Sa4T5W7RaYy+kF6aYBZ1olwny93i0/l7TYJZ1clynTB3C1Dn6z0JTuJnU7cIdZ7uTdcnOJk6ae4Wo07b
        A+mWBCdVJ8114twtSp2mR9OtCc6iTpzr5LlbnJq/n05wVnXy3C1OzdsHEgyhTqC7Rap5+ni6McEQ6gS6
        TqK7xappeyi9JMFQ6iS6TqS7RavpelWCIdWJdJ1MdwtXx/fuBEOrk+lu8eq4fHY/i1En1N0i1uWqH618
        dj+LUSfUdVLdLWYdlpt9WKQ6qa4T625Ra//emGCR6sS6W9TaLzf7sHh1ct0tbl2cm31YhTq5dpPQYbnZ
        h1Vxk9BhudmH1XGT0H79YoJVqhPtbtHrydzsw+q5SajvM8nNPqyem4Se2SPplQk2wU1CT+/1CTbFTUJP
        dmeCTfql1G2KrXR/ek6CTaoT7zr57jbH2vtcelGCTauT7zoB7zbJWns83Z6AqBPwOgnvNssae2cCnuIn
        UrdZ1tY96doEXKFOxLtNs5Y+lW5OQKNOxOtkvNs8S+/h9IoEXKBOxuuEvNtES+6OBOyhTsjrpLzbSEvs
        dxNwgHelbjMtrfvSDQk4QJ2U14l5t6mW0oPphQm4hDoxr5PzbnON3mPptgQcoU7O6wS922Qj97YETKBO
        0LtNNmp3J2BCS/pLQsDEDADYMAMANswAgA0zAGDDDADYMAMANswAgA0zAGDDDADYMAMANswAgA0zAGDD
        DADYMAMANswAgA0zAGDDDADYMAMANswAgA0zAGDDDADYMAMANswAgA0zAGDDDADYMAMANswAgA0zAGDD
        DADYsD9J3WYbMcbx9i//k4XzHQCHuDb9carr8f76FyybAcC+nrr5d/1cYsEMAPbRbf7q8fT9iYUyALia
        Z9v8ux5KL0sskAHARa62+Xd9Oj0vsTAGAM9m382/65/SDYkFMQDoHLr5d92ZWBADgCtddvPvelNiIQwA
        nurYzV99KX1PYgEMAHam2Py7/ju9ODE4A4Ay5ebf9e/p6xIDMwCYY/Pv+tt0XWJQBsC2zbn5d/1GYlAG
        wHadYvPvuiMxIG8H3q67Uvc8z9GfJwbkO4DtOeUrf/Wh9NWJARkA22Lz8zQGwHbY/DyDAbANNj8tA2D9
        bH6eld8CzOfmL//z3Oodet3zOUd/k2z+BfEdwDx+LP1X+vYn/td5eOXnqgyA6dXmr7+VV4+53hRzjiFg
        87MXA2Bar0u7zb+rhsB3pFOx+dmbATCd2vzd467qD2eeYgh8VbL52ZsBMI2LNv+uuYdAbf4/S91/e45s
        /hUwAI73xtQ93q4aAt+ZpmbzcykGwHEO2fy7vpimHAI2P5dmAFzeZTb/rhoCt6Vj2fwcxQC4nDen7jEe
        0sPpmCFg83M0A+BwU2z+XZcdAjY/kzAADvO21D22Yzv0AzZPeQu3zb9iH0zdRR+xc3tn6h7XFD2Svi9d
        jVd+JnV36i78iJ3br6bucU3ZD6WLnPomn69JrNhvpe7ij9gI/ih1j22qHk0/mK506lf+f0xe+TfgR1O3
        AEZsBLUR70nd45uqK4fAOTb/jYkN+IbULYIRG0W9MtZHYXePccpencr7Uvf/z9HfJ5t/Y34zdYthtEby
        3HR/6h7nlNWG7P79HNn8G/X89EDqFsVIjeaW9MnUPdalZfNv3O2pWxgjNaJvTp9N3eNdSn7m5wmn+DXX
        MY3q21K9y697zKP3D8nm5yvem7qFMkIjq3f3/W/qHveoeeWnNeoQGF3dxPOl1D320bL5udCIQ2AJfiR1
        j32kbH72MtoQWIqfSd3jHyGbn4OMNASWZMRbrG1+LmWUIbA0c79v4JBsfo7y+6lbWKdsaU7xvoF9svk5
        Wn3YxLmHwBLV+wY+nLqv5xTZ/Ezm3ENgqb42fSx1X9Oc2fxM7pxDYMlekD6duq9rjmx+ZnOuIbB0p3rf
        gM3P7M4xBNbgW9P/pO7rmyKbn5M59RCo/94azPW+AZufkzvlELg+rcXU7xv4SLL5OZtTDIG1+fHUfZ2H
        Vr9mvCnB2cz9ncC/pDV6S+q+3n2rV36bn2H8XuoW6rHVvfVr9e7Ufc1X65+Tzc9Qrkt3pW7BXrbH07ek
        NTv0fQNe+RnW1EOgPr5s7Q5534DNz/CmGgKfT9+UtmCf9w3Y/CzGsUOgvvX/3rQlF71vwOZnceq3A/WR
        2of+zrte+bvPyNuC7n0DNj+Ldmu6Lz11UT9bd6ZvTFtW7xv4j1TPx73J5mcVfiD9abpy09cr/m+nlyee
        VJ838FfJ5gcAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9nDNNf8PXCfPzMz+S0QAAAAASUVO
        RK5CYII=
</value>
  </data>
</root>